!function(){"use strict";class t{set(t){this.prototype=Object.assign(this,t)}static create(e){return new Proxy(new t,{set:(t,r,n)=>"prototype"==r||t[r]==n||(t[r]?(t[r]=n,e&&e(r,n),!0):(t[r]=n,!0))})}}class e{constructor(e="app"){this._element=document.getElementById(e),this._params={},this.state=t.create(()=>{this._element.innerHTML=this.render(this._params),this.didLoad(this._params)})}addStyle(t){const e=document.createElement("style");e.textContent=t,document.head.appendChild(e)}setElement(t){this._element=t}setElementById(t){this._element=document.getElementById(t)}load(){}render(){}didLoad(){}static async render(t,e={}){t._params=e,await t.load(e),t._element.innerHTML=await t.render(e),await t.didLoad(e)}}const r=async function(t){const e=await fetch(t);return{headers:e.headers,statusCode:e.status,responseType:e.type,responseUrl:e.url,data:await e.json()}};let n=new class{constructor(t){this._routes=t,this._parsedRoutes=this._parseRoutes(),this._useHashRouting=!1}on(t,e){this._routes[t]=e,this._parsedRoutes=this._parseRoutes()}setRouteNotFound(t){this._routes.ERROR_404=t}navigate(t){window.history.pushState({},t,window.location.origin+t),this._matchUrlToRoute(t)}listen(t=!1){this._useHashRouting=t,this._useHashRouting?window.addEventListener("hashchange",()=>{this._matchUrlToRoute(this._getCurrentUrl())}):window.addEventListener("popstate",()=>{this._matchUrlToRoute(this._getCurrentUrl())}),this._matchUrlToRoute(this._getCurrentUrl())}async _renderView(t,e={}){t._params=e,await t.load(e),t._element.innerHTML=await t.render(e),await t.didLoad(e)}_getCurrentUrl(){const t=(this._useHashRouting?window.location.hash.slice(1)||"/":window.location.pathname||"/").toLowerCase();return t.endsWith("/")&&t.length>1?t.slice(0,-1):t}_parseRoutes(){return Object.keys(this._routes).sort((t,e)=>e.length-t.length).map(t=>({url:new RegExp("^"+t.replace(/:[^\s/]+/g,"([\\w-]+)")+"$"),view:this._routes[t],routepath:t}))}_getUrlParameters(t,e){const r={},n=t.routepath.split("/");let s=1;for(let t of n)t.startsWith(":")&&(r[t.substring(1)]=e[s],s++);return r}_matchUrlToRoute(t){let e=null;for(let r of this._parsedRoutes)if(e=t.match(r.url),e){const t=this._getUrlParameters(r,e);return void this._renderView(this._routes[r.routepath],t)}if(!e){const e=this._routes.ERROR_404;if(!e)return void document.write(`Error 404: ${t} not found!`);this._renderView(e)}}}({"/":new class extends e{load(){super.addStyle("\n            .center {\n                margin: auto;\n                width: 50%;\n                padding: 10px;\n            }\n        ")}render(){return'\n            <div class="center">\n                <input id="weather" />\n                <button id="redirect">Submit</button>\n            </div>\n        '}didLoad(){if("geolocation"in window.navigator){window.navigator.geolocation.getCurrentPosition(t=>{n.navigate(`/location/${Math.floor(t.coords.latitude)}${Math.floor(t.coords.longitude)}`)},t=>{throw t})}}},"/location/:pos":new class extends e{load(){}async render(t){let e,n=t.pos.split("-"),s=n[0],o=n[1];return await r(`https://fcc-weather-api.glitch.me/api/current?lat=${s}&lon=${o}`).then(t=>{e=t.data.weather[0]}),`\n            <h1>In your location, here is the current weather:</h1>\n            <h2>${e.main} - ${e.description}</h2>\n        `}}});n.listen(),"serviceWorker"in window.navigator?window.navigator.serviceWorker.register("service-worker.js").then((function(){}),(function(){console.log("CLIENT: service worker registration failure.")})):console.log("CLIENT: service worker is not supported.")}();